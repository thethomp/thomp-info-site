name: Build and Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Build project
      run: npm run build
      
    - name: Create deployment archive
      run: |
        cd dist
        tar -czf ../site.tar.gz .
        cd ..
        
    - name: Setup SSH
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -p ${{ secrets.VPS_PORT || 22 }} ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy files via rsync
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        rsync -avzr --delete \
          -e "ssh -i ~/.ssh/deploy_key -p ${{ secrets.VPS_PORT || 22 }} -o StrictHostKeyChecking=no" \
          dist/ ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }}:/tmp/portfolio-deploy/
          
    - name: Move files and set permissions
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        ssh -i ~/.ssh/deploy_key -p ${{ secrets.VPS_PORT || 22 }} -o StrictHostKeyChecking=no \
          ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} << 'EOF'
        # Create backup
        if [ -d "/var/www/html" ] && [ "$(ls -A /var/www/html)" ]; then
          sudo cp -r /var/www/html /var/www/html.backup.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
        fi
        
        # Create directory and move files
        sudo mkdir -p /var/www/html
        sudo rm -rf /var/www/html/*
        sudo cp -r /tmp/portfolio-deploy/* /var/www/html/
        
        # Set permissions
        sudo chown -R www-data:www-data /var/www/html
        sudo chmod -R 755 /var/www/html
        
        # Clean up
        rm -rf /tmp/portfolio-deploy
        
        # Restart web server
        sudo systemctl reload nginx 2>/dev/null || sudo systemctl reload apache2 2>/dev/null || echo "Web server reload not needed"
        
        echo "Deployment completed successfully!"
        EOF